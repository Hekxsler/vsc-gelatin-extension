{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Gelatin",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#types"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#language"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#input"
		},
		{
			"include": "#xmlattribute"
		},
		{
			"include": "#matchvar"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#doublestrings"
		},
		{
			"include": "#parentheses"
		},
		{
			"include": "#regex"
		},
		{
			"include": "#grammar"
		},
		{
			"include": "#match"
		},
		{
			"include": "#define"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.gelatin",
					"match": "\\b(imatch|match|when|skip)\\b"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "entity.name.type.gelatin",
					"match": "\\b(grammar)\\b"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "entity.name.function.gelatin",
					"match": "\\.\\w+"
				}
			]
		},
		"language": {
			"patterns": [
				{
					"name": "variable.language.gelatin",
					"match": "\\b(out|do|define)\\b"
				}
			]
		},
		"input": {
			"patterns": [
				{
					"name": "entity.other.inherited-class.gelatin",
					"match": "input"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.parameter.gelatin",
					"match": "\\b[a-z0-9_]+\\b"
				}
			]
		},
		"xmlattribute":{
			"patterns": [
				{
					"name": "entity.other.attribute-name.xmlattribute",
					"match": "[?&][a-z]+="
				}
			]
		},
		"matchvar":{
			"patterns": [
				{
					"name": "variable.other.matchvar",
					"match": "\\$\\d+"
				}
			]
		},
		"strings": {
			"name": "string.quoted.single.gelatin",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"include": "#matchvar"
				},
				{
					"include": "#doublestrings"
				},
				{
					"include": "#xmlattribute"
				}
			]
		},
		"doublestrings": {
			"name": "string.quoted.double.gelatin",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"include": "#matchvar"
				}
			]
		},
		"regex": {
			"name": "string.regexp.gelatin",
			"begin": "/",
			"end": "/",
			"patterns": [
				{
					"name": "constant.character.escape.gelatin",
					"match": "\\\\."
				}
			]
		},
		"parentheses": {
			"begin": "\\(",
			"end": "\\)",
			"patterns": [
				{
					"include": "#strings"
				},
				{
					"include": "#doublestrings"
				},
				{
					"include": "#regex"
				}
			]
		}
	},
	"scopeName": "source.gel"
}
